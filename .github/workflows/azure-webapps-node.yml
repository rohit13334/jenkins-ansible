# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '20.x'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: .
    - name: Debug Dynatrace Inputs
      if: always()
      run: |
        echo "Debugging Dynatrace Inputs:"
        echo "Dynatrace URL: ${{ secrets.DT_URL }}"
        echo "Dynatrace Token set? ${{ secrets.DT_TOKEN != '' }}"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref }}"
        echo "Actor: ${{ github.actor }}"
        echo "Event: ${{ github.event_name }}"   
        
    - name: Send Dynatrace Metrics for Build
      if: always()  # ensure this runs even if previous steps fail
      uses: dynatrace-oss/dynatrace-github-action@v9
      with:
        url: ${{ secrets.DT_URL }}
        token: ${{ secrets.DT_TOKEN }}
        metrics: |
          - metric: "github.workflow.build.count"
            value: "1"
            dimensions:
              repo: "${{ github.repository }}"
              branch: "${{ github.ref }}"
              status: "${{ job.status }}"
              actor: "${{ github.actor }}"
        events: |
          - title: "Build Job Completed"
            type: CUSTOM_INFO
            entitySelector: type(custom_device),tag("github-build")
            properties:
              repo: "${{ github.repository }}"
              branch: "${{ github.ref }}"
              result: "${{ job.status }}"
              source: "GitHub Actions"

  deploy:
    if: always()
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      if: always()
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Send Dynatrace Metrics for Deployment
      if: always()
      uses: dynatrace-oss/dynatrace-github-action@v9
      with:
        url: ${{ secrets.DT_URL }}
        token: ${{ secrets.DT_TOKEN }}
        metrics: |
          - metric: "github.workflow.deploy.count"
            value: "1"
            dimensions:
              repo: "${{ github.repository }}"
              branch: "${{ github.ref }}"
              status: "${{ job.status }}"
              environment: "Development"
              actor: "${{ github.actor }}"
        events: |
          - title: "Deployment to Azure WebApp"
            type: CUSTOM_DEPLOYMENT
            entitySelector: type(custom_device),tag("github-deploy")
            properties:
              repo: "${{ github.repository }}"
              result: "${{ job.status }}"
              appName: "${{ env.AZURE_WEBAPP_NAME }}"
              source: "GitHub Actions"
